{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","CreateTodoButton/index.js","Modal/index.js","TodoForm/index.js","TodoError/index.jsx","TodoLoading/index.jsx","TodoEmpty/index.jsx","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","addTodo","push","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","ErrorTodo","LoadingTodos","EmptyTodo","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.27f0fe45.chunk.js","sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage(\"TODOS_V1\", []);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [openModal, setOpenModal] = React.useState(false);\n\n  const completedTodos = todos.filter((todo) => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter((todo) => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text,\n    });\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{\n        loading,\n        error,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        searchedTodos,\n        completeTodo,\n        addTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };\n","import React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n  \n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n        \n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch(error) {\n        setError(error);\n      }\n    }, 1000);\n  });\n  \n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch(error) {\n      setError(error);\n    }\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n  };\n}\n\nexport { useLocalStorage };\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoCounter.css';\n\nfunction TodoCounter() {\n  const { totalTodos, completedTodos } = React.useContext(TodoContext);\n  \n  return (\n    <h2 className=\"TodoCounter\">Task completed: {completedTodos} <br></br> Remaining task: {totalTodos}</h2>\n  );\n}\n\nexport { TodoCounter };\n","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoSearch.css\";\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = React.useContext(TodoContext);\n\n  const onSearchValueChange = (event) => {\n    console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <div className=\"todoSearch-container\">\n          <input\n      className=\"TodoSearch\"\n      placeholder=\"Search\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n    </div>\n  );\n}\n\nexport { TodoSearch };\n","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n  return (\n      <div className=\"container\">\n        {props.children}\n      </div>\n  );\n}\n\nexport { TodoList };\n","import React from 'react';\nimport './TodoItem.css';\nimport {FiCheck} from \"react-icons/fi\"\nimport {ImCancelCircle} from \"react-icons/im\"\n\n\nfunction TodoItem(props) {\n  return (\n    <div className=\"TodoItem\">\n      <span\n        className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n        onClick={props.onComplete}\n      >\n        <FiCheck/>\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span\n        className=\"Icon Icon-delete\"\n        onClick={props.onDelete}\n      >\n        <ImCancelCircle/>\n      </span>\n   </div>\n  );\n}\n\nexport { TodoItem };\n","import React from \"react\";\nimport \"./CreateTodoButton.css\";\n\nfunction CreateTodoButton(props) {\n  const onClickButton = () => {\n    props.setOpenModal((prevState) => !prevState);\n  };\n\n  return (\n    <button className=\"CreateTodoButton\" onClick={onClickButton}>\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">{children}</div>,\n    document.getElementById(\"modal\")\n  );\n}\n\nexport { Modal };\n","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport \"./todoForm.css\";\r\n\r\nfunction TodoForm() {\r\n  // Creamos un estado para nuestro nuevo TODO\r\n  const [newTodoValue, setNewTodoValue] = React.useState(\"\");\r\n  // Desestructuramos las funciones que necesitamos para añadir un TODO y cerrar nuestro modal\r\n  const { addTodo, setOpenModal } = React.useContext(TodoContext);\r\n\r\n  // Creamos una función para actualizar el estado de nuestro nuevo TODO\r\n  const onChange = (event) => {\r\n    setNewTodoValue(event.target.value);\r\n  };\r\n\r\n  // Función para cerrar el modal\r\n  const onCancel = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  // Función para agregar nuestro nuevo TODO\r\n  const onSubmit = (event) => {\r\n    // prevent default para evitar recargar la página\r\n    event.preventDefault();\r\n    // Utilizamos nuestra función para añadir nuestro TODO\r\n    addTodo(newTodoValue);\r\n    // Cerramos nustro modal\r\n    setOpenModal(false);\r\n    // También estaría bien resetear nuestro formulario\r\n    setNewTodoValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <label>Add To-Do</label>\r\n      <textarea\r\n        value={newTodoValue}\r\n        onChange={onChange}\r\n        placeholder=\"Your new Too-Do!\"\r\n      />\r\n      <div className=\"TodoForm-buttonContainer\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoForm-button TodoForm-button--cancel\"\r\n          onClick={onCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" className=\"TodoForm-button TodoForm-button--add\">\r\n          Add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { TodoForm };\r\n","import React from \"react\";\r\nfunction ErrorTodo(){\r\n  return <p>Ha ocurrido un error</p>\r\n}\r\nexport{ ErrorTodo };","import React from \"react\";\r\nfunction LoadingTodos(){\r\n  return (\r\n    <div className=\"LoadingTodo-container\">\r\n      <span className=\"LoadingTodo-completeIcon\"></span>\r\n      <p className=\"LoadingTodo-text\">Loading your To-Dos</p>\r\n      <span className=\"LoadingTodo-deleteIcon\"></span>\r\n    </div>\r\n  )\r\n}\r\nexport{ LoadingTodos };","import React from \"react\";\r\nfunction EmptyTodo(){\r\n  return <p>Let's create your first To-Do!</p>\r\n}\r\nexport{ EmptyTodo };","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { TodoList } from \"../TodoList\";\nimport { TodoItem } from \"../TodoItem\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { Modal } from \"../Modal\";\nimport { TodoForm } from \"../TodoForm\";\nimport { ErrorTodo } from \"../TodoError\";\nimport { LoadingTodos } from \"../TodoLoading\";\nimport { EmptyTodo } from \"../TodoEmpty\";\n\nfunction AppUI() {\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal,\n  } = React.useContext(TodoContext);\n\n  return (\n    <React.Fragment>\n      <TodoCounter />\n      <TodoSearch />\n\n      <TodoList>\n        {error && <ErrorTodo/>}\n        {loading && <LoadingTodos/>}\n        {!loading && !searchedTodos.length && <EmptyTodo/>}\n\n        {searchedTodos.map((todo) => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        ))}\n      </TodoList>\n\n      {!!openModal && (\n        <Modal>\n          <TodoForm />\n        </Modal>\n      )}\n\n      <CreateTodoButton setOpenModal={setOpenModal} />\n    </React.Fragment>\n  );\n}\n\nexport { AppUI };\n","import React from 'react';\nimport { TodoProvider } from '../TodoContext';\nimport { AppUI } from './AppUI';\n\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index.js';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}